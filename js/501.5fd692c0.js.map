{"version":3,"file":"js/501.5fd692c0.js","mappings":"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","sources":["webpack://twitter-front-2020/./src/components/TweetsSection.vue","webpack://twitter-front-2020/src/components/TweetsSection.vue","webpack://twitter-front-2020/./src/components/TweetsSection.vue?5567","webpack://twitter-front-2020/./src/components/TweetsSection.vue?4e50","webpack://twitter-front-2020/./src/views/Tweets.vue","webpack://twitter-front-2020/./src/components/NewTweet.vue","webpack://twitter-front-2020/src/components/NewTweet.vue","webpack://twitter-front-2020/./src/components/NewTweet.vue?32f4","webpack://twitter-front-2020/./src/components/NewTweet.vue?e808","webpack://twitter-front-2020/src/views/Tweets.vue","webpack://twitter-front-2020/./src/views/Tweets.vue?3300","webpack://twitter-front-2020/./src/views/Tweets.vue?9099"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"infinite-scroll\",rawName:\"v-infinite-scroll\",value:(_vm.loadMore),expression:\"loadMore\"}],attrs:{\"infinite-scroll-disabled\":\"busy\"}},_vm._l((_vm.tweets),function(tweet){return _c('div',{key:tweet.id,staticClass:\"tweet-wrapper\"},[_c('div',{staticClass:\"tweet-wrapper-left\"},[_c('router-link',{staticClass:\"link\",attrs:{\"to\":'/users/' + tweet.User.id}},[_c('img',{attrs:{\"src\":tweet.User.avatar,\"alt\":\"\"}})])],1),_c('div',{staticClass:\"tweet-wrapper-right\"},[_c('div',{staticClass:\"tweet-info\"},[_c('router-link',{staticClass:\"link\",attrs:{\"to\":'/users/' + tweet.User.id}},[_c('div',{staticClass:\"tweet-info-name\"},[_vm._v(_vm._s(tweet.User.name))])]),_c('router-link',{staticClass:\"link\",attrs:{\"to\":'/users/' + tweet.User.id}},[_c('div',{staticClass:\"tweet-info-account\"},[_vm._v(\" @\"+_vm._s(tweet.User.account))])]),_c('div',{staticClass:\"tweet-info-data\"},[_vm._v(\"・\"+_vm._s(_vm._f(\"fromNow\")(tweet.createdAt)))])],1),_c('router-link',{staticClass:\"link\",attrs:{\"to\":'/tweets/' + tweet.id}},[_c('div',{staticClass:\"tweet-description\"},[_vm._v(\" \"+_vm._s(tweet.description)+\" \")])]),_c('div',{staticClass:\"tweet-interaction\"},[_c('div',[_c('img',{attrs:{\"src\":require(\"../assets/icon-reply.png\"),\"alt\":\"\",\"type\":\"button\",\"data-bs-toggle\":\"modal\",\"data-bs-target\":'#modal' + tweet.id}}),_c('p',[_vm._v(_vm._s(tweet.repliesLength))])]),(_vm.currentUser.userLikesId.includes(tweet.id))?_c('div',[_c('img',{attrs:{\"src\":require(\"../assets/icon-isLiked.png\"),\"type\":\"button\",\"alt\":\"\"},on:{\"click\":function($event){return _vm.unlikeTweet(tweet.id)}}}),_c('p',[_vm._v(_vm._s(tweet.likesLength))])]):_c('div',[_c('img',{attrs:{\"src\":require(\"../assets/icon-like.png\"),\"type\":\"button\",\"alt\":\"\"},on:{\"click\":function($event){return _vm.likeTweet(tweet.id)}}}),_c('p',[_vm._v(_vm._s(tweet.likesLength))])])])],1),_c('ModalTweetReply',{attrs:{\"tweet\":tweet,\"currentUser\":_vm.currentUser},on:{\"after-post-tweet-reply\":_vm.afterPostTweetReply}})],1)}),0)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div v-infinite-scroll=\"loadMore\" infinite-scroll-disabled=\"busy\">\r\n    <div v-for=\"tweet in tweets\" :key=\"tweet.id\" class=\"tweet-wrapper\">\r\n      <div class=\"tweet-wrapper-left\">\r\n        <router-link class=\"link\" v-bind:to=\"'/users/' + tweet.User.id\">\r\n          <img v-bind:src=\"tweet.User.avatar\" alt=\"\">\r\n        </router-link>\r\n      </div>\r\n      <div class=\"tweet-wrapper-right\">\r\n        <div class=\"tweet-info\">\r\n          <router-link class=\"link\" v-bind:to=\"'/users/' + tweet.User.id\">\r\n            <div class=\"tweet-info-name\">{{ tweet.User.name }}</div>\r\n          </router-link>\r\n          <router-link class=\"link\" v-bind:to=\"'/users/' + tweet.User.id\">\r\n            <div class=\"tweet-info-account\"> @{{ tweet.User.account }}</div>\r\n          </router-link>\r\n          <div class=\"tweet-info-data\">・{{ tweet.createdAt | fromNow }}</div>\r\n        </div>\r\n        <router-link class=\"link\" v-bind:to=\"'/tweets/' + tweet.id\">\r\n          <div class=\"tweet-description\">\r\n            {{ tweet.description }}\r\n          </div>\r\n        </router-link>\r\n        <div class=\"tweet-interaction\">\r\n          <div>\r\n            <!-- trigger modal -->\r\n            <img src=\"../assets/icon-reply.png\" alt=\"\" type=\"button\" data-bs-toggle=\"modal\"\r\n              v-bind:data-bs-target=\"'#modal' + tweet.id\">\r\n            <p>{{ tweet.repliesLength }}</p>\r\n          </div>\r\n          <div v-if=\"currentUser.userLikesId.includes(tweet.id)\">\r\n            <img src=\"../assets/icon-isLiked.png\" type=\"button\" alt=\"\" v-on:click=\"unlikeTweet(tweet.id)\">\r\n            <p>{{ tweet.likesLength }}</p>\r\n          </div>\r\n          <div v-else>\r\n            <img src=\"../assets/icon-like.png\" type=\"button\" alt=\"\" v-on:click=\"likeTweet(tweet.id)\">\r\n            <p>{{ tweet.likesLength }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ModalTweetReply v-bind:tweet=\"tweet\" v-on:after-post-tweet-reply=\"afterPostTweetReply\"\r\n        v-bind:currentUser=\"currentUser\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { fromNowFilter } from '../utils/mixins'\r\nimport ModalTweetReply from './ModalTweetReply.vue'\r\nimport { mapState } from 'vuex'\r\nimport tweetsAPI from '../api/tweets'\r\n\r\nexport default {\r\n  components: {\r\n    ModalTweetReply\r\n  },\r\n  props: {\r\n    propsTweets: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    loadMoreTrigger: {\r\n      type: String\r\n    },\r\n    loadToEnd: {\r\n      type: Boolean\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      tweets: [],\r\n      busy: false\r\n    }\r\n  },\r\n  methods: {\r\n    afterPostTweetReply(payload) {\r\n      const { TweetId } = payload\r\n      this.tweets.forEach(tweet => {\r\n        if (tweet.id === Number(TweetId)) {\r\n          tweet.repliesLength += 1\r\n        }\r\n      })\r\n      // 在自己的 User.vue，在 post reply 後，要在自己的 RepliesSection unshift 該則新回覆；在別人的 User.vue 則不用\r\n      if (this.$router.history.current.name === 'user' && Number(this.$router.history.current.params.id) === this.currentUser.id) {\r\n        this.$emit('after-post-tweet-reply', {\r\n          ...payload,\r\n        })\r\n      }\r\n    },\r\n    async likeTweet(tweetId) {\r\n      try {\r\n        this.isProcessing = true\r\n        let likesLength = 0\r\n        // 向後端 post likeTweet\r\n        const { data } = await tweetsAPI.likeTweet({ tweetId })\r\n        if (data.status === 'success') {\r\n          // tweet 的愛心icon 亮起\r\n          this.currentUser.userLikesId.push(tweetId)\r\n          // tweet 的喜歡次數 + 1\r\n          this.tweets.forEach(tweet => {\r\n            if (tweet.id === tweetId) {\r\n              tweet.likesLength += 1\r\n              likesLength = tweet.likesLength\r\n            }\r\n          })\r\n        }\r\n        // 在自己的 User.vue，在 post like 後，要在自己的 LikeSection unshift 該則 tweet；在別人的 User.vue 則不用\r\n        if (this.$route.name === 'user' && Number(this.$route.params.id) === this.currentUser.id) {\r\n          // 取得該則被喜歡的 tweet\r\n          let newLikedTweet = {}\r\n          this.tweets.forEach(tweet => {\r\n            if (tweet.id === tweetId) {\r\n              newLikedTweet = {\r\n                ...tweet,\r\n              }\r\n            }\r\n          })\r\n          // 將被喜歡的 tweet，以及 tweet 的喜歡次數(likesLength)，傳給父層再處理\r\n          this.$emit('after-like-tweet', {\r\n            newLikedTweet: {\r\n              ...newLikedTweet\r\n            },\r\n            likesLength: likesLength,\r\n            from: 'TweetsSection',\r\n          })\r\n        }\r\n        this.isProcessing = false\r\n      } catch (error) {\r\n        this.isProcessing = false\r\n        console.warn(error)\r\n      }\r\n    },\r\n    async unlikeTweet(tweetId) {\r\n      try {\r\n        this.isProcessing = true\r\n        let likesLength = 0\r\n        // 向後端 post unlikeTweet\r\n        const { data } = await tweetsAPI.unlikeTweet({ tweetId })\r\n        if (data.status === 'success') {\r\n          // tweet 的愛心icon 熄滅\r\n          this.currentUser.userLikesId = this.currentUser.userLikesId.map(userLikeId => {\r\n            if (userLikeId !== tweetId) {\r\n              return userLikeId\r\n            }\r\n          })\r\n          // tweet 的喜歡次數 - 1\r\n          this.tweets.forEach(tweet => {\r\n            if (tweet.id === tweetId) {\r\n              tweet.likesLength -= 1\r\n              likesLength = tweet.likesLength\r\n            }\r\n          })\r\n        }\r\n        // 在自己的 User.vue，在 post unlike 後，要在自己的 LikeSection remove 該則 tweet；在別人的 User.vue 則不用\r\n        if (this.$route.name === 'user' && Number(this.$route.params.id) === this.currentUser.id) {\r\n          // 將被 unlike 的 tweet id，以及 tweet 的喜歡次數(likesLength)，傳給父層再處理\r\n          this.$emit('after-unlike-tweet', {\r\n            unlikeTweetId: tweetId,\r\n            likesLength: likesLength,\r\n            from: 'TweetsSection'\r\n          })\r\n        }\r\n        this.isProcessing = false\r\n      } catch (error) {\r\n        this.isProcessing = false\r\n        console.warn(error)\r\n      }\r\n    },\r\n    loadMore() {\r\n      if (this.loadMoreTrigger !== 'tweets' || this.loadToEnd === true) {\r\n        return\r\n      }\r\n      this.busy = true\r\n      // 設定至少 1.5 秒後才可以再 trigger 一次\r\n      this.$emit('load-more', {\r\n        'from': 'tweetsSection'\r\n      })\r\n      setTimeout(() => {\r\n        this.busy = false\r\n      }, 1500)\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['currentUser'])\r\n  },\r\n  watch: {\r\n    propsTweets(newValue) {\r\n      this.tweets = newValue\r\n    }\r\n  },\r\n  mixins: [fromNowFilter],\r\n}\r\n</script>\r\n\r\n<style>\r\n.tweet-wrapper {\r\n  display: flex;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #E6ECF0;\r\n}\r\n\r\n.tweet-wrapper-left img {\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.tweet-wrapper-right {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-left: 10px;\r\n}\r\n\r\n.tweet-info,\r\n.tweet-interaction {\r\n  display: flex;\r\n}\r\n\r\n.tweet-info-name {\r\n  margin-right: 5px;\r\n  font-weight: 700;\r\n  font-size: 15px;\r\n  line-height: 22px;\r\n  color: #1C1C1C;\r\n}\r\n\r\n.tweet-info-account,\r\n.tweet-info-data {\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n  line-height: 22px;\r\n  color: #657786;\r\n}\r\n\r\n.tweet-description {\r\n  margin-top: 6px;\r\n  font-weight: 500;\r\n  font-size: 15px;\r\n  line-height: 22px;\r\n  color: #1C1C1C;\r\n  word-break: break-all;\r\n}\r\n\r\n.tweet-interaction {\r\n  margin-top: 14px;\r\n  font-weight: 500;\r\n  font-size: 13px;\r\n  line-height: 13px;\r\n  color: #657786;\r\n}\r\n\r\n.tweet-interaction div {\r\n  display: flex;\r\n  margin-right: 50px;\r\n}\r\n\r\n.tweet-interaction div img {\r\n  width: 12px;\r\n  height: 12px;\r\n}\r\n\r\n.tweet-interaction div p {\r\n  margin: 0px;\r\n  margin-left: 12px;\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TweetsSection.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TweetsSection.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TweetsSection.vue?vue&type=template&id=3b73e3fd&\"\nimport script from \"./TweetsSection.vue?vue&type=script&lang=js&\"\nexport * from \"./TweetsSection.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TweetsSection.vue?vue&type=style&index=0&id=3b73e3fd&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"left-container\"},[_c('Navbar',{staticClass:\"Navbar\",attrs:{\"currentUser\":_vm.currentUser}})],1),_c('div',{staticClass:\"middle-container\"},[_c('h1',[_vm._v(\"首頁\")]),_c('NewTweet',{attrs:{\"currentUser\":_vm.currentUser,\"isProcessing\":_vm.isProcessing},on:{\"after-create-tweet\":_vm.afterCreateTweet}}),_c('TweetsSection',{attrs:{\"propsTweets\":_vm.tweets,\"loadMoreTrigger\":_vm.loadMoreTrigger,\"loadToEnd\":_vm.loadToEnd},on:{\"load-more\":_vm.loadMore}}),_c('ModalNewTweet',{attrs:{\"currentUser\":_vm.currentUser},on:{\"after-post-new-tweet\":_vm.afterPostNewTweet}})],1),_c('div',{staticClass:\"right-container\"},[_c('FollowingsBar',{staticClass:\"FollowingsBar\",attrs:{\"currentUser\":_vm.currentUser}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"new-tweet-wrapper\"},[_c('div',{staticClass:\"new-tweet-wrapper-left\"},[_c('router-link',{staticClass:\"link\",attrs:{\"to\":'/users/' + _vm.currentUser.id}},[_c('img',{attrs:{\"src\":_vm.currentUser.avatar,\"alt\":\"\"}})])],1),_c('form',{staticClass:\"new-tweet-wrapper-right\",on:{\"submit\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.handleSubmit.apply(null, arguments)}}},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newTweetDescription),expression:\"newTweetDescription\"}],attrs:{\"cols\":\"30\",\"rows\":\"5\",\"maxlength\":\"140\",\"placeholder\":\"有什麼新鮮事？\",\"name\":\"newTweetDescription\",\"required\":\"\"},domProps:{\"value\":(_vm.newTweetDescription)},on:{\"keyup\":_vm.words_deal,\"input\":function($event){if($event.target.composing)return;_vm.newTweetDescription=$event.target.value}}}),_c('div',{staticClass:\"textContent-span-wrapper\"},[_c('span',{staticClass:\"textContent-span textContent-span-warning textContent-span-hidden\"},[_vm._v(\"字數已達上限!\")]),_c('span',{staticClass:\"textContent-span textContent-span-hidden\"}),_c('button',{staticClass:\"btn btn-orange btn-new-tweet\",attrs:{\"type\":\"submit\",\"disabled\":_vm.isProcessing}},[_vm._v(\"推文\")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"new-tweet-wrapper\">\r\n    <div class=\"new-tweet-wrapper-left\">\r\n      <router-link class=\"link\" v-bind:to=\"'/users/' + currentUser.id\">\r\n        <img v-bind:src=\"currentUser.avatar\" alt=\"\">\r\n      </router-link>\r\n    </div>\r\n    <form @submit.prevent.stop=\"handleSubmit\" class=\"new-tweet-wrapper-right\">\r\n      <textarea cols=\"30\" rows=\"5\" maxlength=\"140\" placeholder=\"有什麼新鮮事？\" v-model=\"newTweetDescription\"\r\n        name=\"newTweetDescription\" v-on:keyup='words_deal' required></textarea>\r\n      <div class=\"textContent-span-wrapper\">\r\n        <span class=\"textContent-span textContent-span-warning textContent-span-hidden\">字數已達上限!</span>\r\n        <span class=\"textContent-span textContent-span-hidden\"></span>\r\n        <button type=\"submit\" class=\"btn btn-orange btn-new-tweet\" v-bind:disabled=\"isProcessing\">推文</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Toast } from '../utils/helpers'\r\n\r\nexport default {\r\n  props: {\r\n    isProcessing: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    currentUser: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      newTweetDescription: '',\r\n    }\r\n  },\r\n  methods: {\r\n    handleSubmit(event) {\r\n      if (!this.newTweetDescription.trim()) {\r\n        Toast.fire({\r\n          icon: 'warning',\r\n          title: '推文內容不可為空白'\r\n        })\r\n        return\r\n      }\r\n      // 避免使用者移除 textarea 的 maxlength=\"140\" 屬性\r\n      if (this.newTweetDescription.length > 140) {\r\n        this.newTweetDescription = this.newTweetDescription.slice(0, 140)\r\n      }\r\n      this.$emit('after-create-tweet', {\r\n        UserId: this.currentUser.id,\r\n        description: this.newTweetDescription,\r\n      })\r\n      this.newTweetDescription = ''\r\n      // 送出後，清除字數上限提示\r\n      event.target.children[1].children[0].classList.add('textContent-span-hidden')\r\n      event.target.children[1].children[1].classList.add('textContent-span-hidden')\r\n    },\r\n    words_deal(event) {\r\n      const maxlength = event.target.attributes.maxlength.value\r\n      const textlength = event.target.value.length\r\n\r\n      // 可輸入的字數剩餘 20 字以內時\r\n      if (maxlength - textlength <= 20) {\r\n        // 顯示\"目前字數/字數上限\" 如 120/140\r\n        event.target.parentElement.children[1].children[1].classList.remove('textContent-span-hidden')\r\n        event.target.parentElement.children[1].children[1].textContent = `${textlength}/${maxlength}`\r\n\r\n        // 目前字數>=字數上限時，顯示\"字數已達上限\"的提示\r\n        if (textlength >= maxlength) {\r\n          event.target.parentElement.children[1].children[0].classList.remove('textContent-span-hidden')\r\n        } else {\r\n          event.target.parentElement.children[1].children[0].classList.add('textContent-span-hidden')\r\n        }\r\n      } else {\r\n        event.target.parentElement.children[1].children[0].classList.add('textContent-span-hidden')\r\n        event.target.parentElement.children[1].children[1].classList.add('textContent-span-hidden')\r\n      }\r\n      return\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.new-tweet-wrapper {\r\n  display: flex;\r\n  padding: 15px;\r\n  border-top: 1px solid #E6ECF0;\r\n  border-bottom: 10px solid #E6ECF0;\r\n}\r\n\r\n.new-tweet-wrapper-left img {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.new-tweet-wrapper-right {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n  margin: 0px;\r\n  margin-left: 10px;\r\n  padding: 0px;\r\n}\r\n\r\n.new-tweet-wrapper-right textarea {\r\n  width: 100%;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  border: none;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 26px;\r\n  resize: none;\r\n}\r\n\r\n.new-tweet-wrapper-right textarea::placeholder {\r\n  color: #9197A3;\r\n}\r\n\r\n.new-tweet-wrapper-right textarea:focus,\r\n.new-tweet-wrapper-right textarea:focus-visible {\r\n  width: 100%;\r\n  margin: 0px;\r\n  padding: 0px;\r\n  border: none;\r\n  outline: none;\r\n}\r\n\r\n.new-tweet-wrapper-right .btn-new-tweet {\r\n  width: 66px;\r\n  height: 38px;\r\n  border-radius: 100px;\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewTweet.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewTweet.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NewTweet.vue?vue&type=template&id=a31fada8&\"\nimport script from \"./NewTweet.vue?vue&type=script&lang=js&\"\nexport * from \"./NewTweet.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NewTweet.vue?vue&type=style&index=0&id=a31fada8&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"container\">\r\n    <div class=\"left-container\">\r\n      <Navbar class=\"Navbar\" v-bind:currentUser=\"currentUser\" />\r\n    </div>\r\n\r\n    <div class=\"middle-container\">\r\n      <h1>首頁</h1>\r\n      <NewTweet v-on:after-create-tweet=\"afterCreateTweet\" v-bind:currentUser=\"currentUser\"\r\n        v-bind:isProcessing=\"isProcessing\" />\r\n      <TweetsSection v-bind:propsTweets=\"tweets\" v-on:load-more=\"loadMore\" v-bind:loadMoreTrigger=\"loadMoreTrigger\" v-bind:loadToEnd=\"loadToEnd\" />\r\n      <ModalNewTweet v-bind:currentUser=\"currentUser\" v-on:after-post-new-tweet=\"afterPostNewTweet\" />\r\n    </div>\r\n\r\n    <div class=\"right-container\">\r\n      <FollowingsBar class=\"FollowingsBar\" v-bind:currentUser=\"currentUser\" />\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Navbar from '../components/Navbar.vue'\r\nimport FollowingsBar from '../components/FollowingsBar.vue'\r\nimport TweetsSection from '../components/TweetsSection.vue'\r\nimport NewTweet from '../components/NewTweet.vue'\r\nimport ModalNewTweet from '../components/ModalNewTweet.vue'\r\nimport tweetsAPI from '../api/tweets'\r\nimport { mapState } from 'vuex'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { Toast } from '../utils/helpers'\r\n\r\nexport default {\r\n  components: {\r\n    Navbar,\r\n    FollowingsBar,\r\n    TweetsSection,\r\n    NewTweet,\r\n    ModalNewTweet\r\n  },\r\n  data() {\r\n    return {\r\n      tweets: [],\r\n      isProcessing: false,\r\n      offset: 0,\r\n      loadMoreTrigger: 'tweets',\r\n      loadToEnd: false\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchTweets() {\r\n      try {\r\n        const offset = this.offset\r\n        this.offset = this.offset + 10\r\n        const response = await tweetsAPI.getTweets({ offset })\r\n        if (response.status !== 200) {\r\n          throw new Error()\r\n        }\r\n        const data = response.data\r\n        if (data === 'loadToEnd') {\r\n          this.loadToEnd = true\r\n          return\r\n        }\r\n        data.forEach(tweet => {\r\n          this.tweets.push(tweet)\r\n        })\r\n      } catch (error) {\r\n        console.warn(error)\r\n        Toast.fire({\r\n          icon: 'error',\r\n          title: '暫時無法讀取 Tweets，請稍後再試',\r\n          timer: 2000,\r\n        })\r\n      }\r\n    },\r\n    async afterCreateTweet(payload) {\r\n      try {\r\n        this.isProcessing = true\r\n        const { UserId, description } = payload\r\n        const formData = {\r\n          UserId: UserId,\r\n          description: description,\r\n        }\r\n        const response = await tweetsAPI.postTweet({ formData })\r\n        const data = response.data\r\n        if (data.status !== 'success') {\r\n          throw new Error(data.message)\r\n        }\r\n        this.tweets.unshift({\r\n          Likes: [],\r\n          Replies: [],\r\n          User: {\r\n            account: this.currentUser.account,\r\n            avatar: this.currentUser.avatar,\r\n            banner: this.currentUser.banner,\r\n            id: this.currentUser.id,\r\n            introduction: this.currentUser.introduction,\r\n            name: this.currentUser.name,\r\n            role: this.currentUser.role,\r\n          },\r\n          UserId: this.currentUser.id,\r\n          createdAt: Date.now(),\r\n          description: description,\r\n          id: data.tweetId,\r\n          likesLength: 0,\r\n          repliesLength: 0,\r\n          updatedAt: Date.now(),\r\n        })\r\n        Toast.fire({\r\n          icon: 'success',\r\n          title: '推文發送成功'\r\n        })\r\n        this.isProcessing = false\r\n      } catch (error) {\r\n        this.isProcessing = false\r\n        console.warn(error)\r\n      }\r\n    },\r\n    afterPostNewTweet(payload) {\r\n      this.tweets.unshift({\r\n        Likes: [],\r\n        Replies: [],\r\n        User: {\r\n          account: this.currentUser.account,\r\n          avatar: this.currentUser.avatar,\r\n          banner: this.currentUser.banner,\r\n          id: this.currentUser.id,\r\n          introduction: this.currentUser.introduction,\r\n          name: this.currentUser.name,\r\n          role: this.currentUser.role,\r\n        },\r\n        UserId: this.currentUser.id,\r\n        createdAt: Date.now(),\r\n        description: payload.description,\r\n        id: payload.tweetId,\r\n        likesLength: 0,\r\n        repliesLength: 0,\r\n        updatedAt: Date.now(),\r\n      })\r\n      Toast.fire({\r\n        icon: 'success',\r\n        title: '推文發送成功'\r\n      })\r\n    },\r\n    loadMore(payload) {\r\n      this.fetchTweets()\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['currentUser', 'isAuthenticated'])\r\n  },\r\n  created() {\r\n    this.fetchTweets()\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Tweets.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Tweets.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tweets.vue?vue&type=template&id=c32db3f6&\"\nimport script from \"./Tweets.vue?vue&type=script&lang=js&\"\nexport * from \"./Tweets.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","loadMore","expression","attrs","_l","tweets","tweet","key","id","staticClass","User","avatar","_v","_s","account","_f","createdAt","description","require","repliesLength","currentUser","userLikesId","includes","on","$event","unlikeTweet","likesLength","likeTweet","afterPostTweetReply","staticRenderFns","components","ModalTweetReply","props","propsTweets","type","required","loadMoreTrigger","loadToEnd","data","busy","methods","TweetId","tweetId","newLikedTweet","from","console","unlikeTweetId","setTimeout","computed","watch","mixins","component","isProcessing","afterCreateTweet","afterPostNewTweet","preventDefault","stopPropagation","handleSubmit","apply","arguments","newTweetDescription","domProps","words_deal","target","composing","UserId","event","Toast","icon","title","Navbar","FollowingsBar","TweetsSection","NewTweet","ModalNewTweet","offset","timer","formData","Likes","Replies","banner","introduction","role","updatedAt","created"],"sourceRoot":""}